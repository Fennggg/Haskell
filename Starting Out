ghci>3+17
20
ghci>2+15
17
ghci>49*100
4900
ghci>1892-1472
420
ghci>5/2
2.5
ghci>(50*100)-4999
1
ghci>50*100-499
4501
ghci>2 + 15  
17
ghci>49 * 100  
4900
ghci>1892 - 1472  
420
ghci> 5 / 2 
2.5
ghci>(50 * 100) - 4999  
1
ghci>50 * 100 - 4999 
1
ghci>50 * (100 - 4999)  
-244950
ghci>True && False  
False
ghci>True && True 
True
ghci>False || True  
True
ghci>not False  
True
ghci>not (True && True)  
False
ghci> 5 == 5 
True
ghci>1 == 0  
False
ghci>5 /= 5  
False
ghci>5 /= 4  
True
ghci>"hello" == "hello" 
True
ghci>succ 8
9
ghci>min 9 10
9
ghci>min 3.4 3.2
3.2
ghci>max 100 101
101
ghci>succ 9 + max 5 4 + 1 
16
ghci>let lostNumbers = [4,8,15,16,23,42] 
ghci>lostNumbers 
[4,8,15,16,23,42]
ghci>succ 9 + max 5 4 + 1  
16
ghci>(succ 9) + (max 5 4) + 1  
16
ghci>let lostNumbers = [4,8,15,16,23,42] 
ghci>lostNumbers  
[4,8,15,16,23,42]
ghci>[1,2,3,4] ++ [9,10,11,12]  
[1,2,3,4,9,10,11,12]
ghci>"hello" ++ " " ++ "world"  
"hello world"
ghci>['w','o'] ++ ['o','t'] 
"woot"
ghci> 'A':" SMALL CAT"  
"A SMALL CAT"
ghci>5:[1,2,3,4,5]  
[5,1,2,3,4,5]
ghci>"Steve Buscemi" !! 6  
'B'
ghci>[9.4,33.2,96.2,11.2,23.25] !! 1  
33.2
ghci>let b = [[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]  
ghci> b
[[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]
ghci>b ++ [[1,1,1,1]]
[[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3],[1,1,1,1]]
ghci> [6,6,6]:b 
[[6,6,6],[1,2,3,4],[5,3,3,3],[1,2,2,3,4],[1,2,3]]
ghci> b !! 2 
[1,2,2,3,4]
ghci>[3,2,1] > [2,1,0]  
True
ghci>[3,2,1] > [2,10,100] 
True
ghci>[3,4,2] > [3,4]  
True
ghci>[3,4,2] > [2,4]  
True
ghci>[3,4,2] == [3,4,2]  
True
ghci>head [5,4,3,2,1]  
5
ghci>tail [5,4,3,2,1]  
[4,3,2,1]
ghci>last [5,4,3,2,1] 
1
ghci>init [5,4,3,2,1]  
[5,4,3,2]
ghci>head [] 
*** Exception: Prelude.head: empty list
ghci>length [5,4,3,2,1]  
5
ghci>null [1,2,3]  
False
ghci>null []  
True
ghci>reverse [5,4,3,2,1]
[1,2,3,4,5]
ghci>take 3 [5,4,3,2,1]  
[5,4,3]
ghci>take 1 [3,9,3]  
[3]
ghci>take 5 [1,2]
[1,2]
ghci>take 0 [6,6,6]  
[]
ghci>drop 3 [8,4,2,1,5,6]  
[1,5,6]
ghci>drop 0 [1,2,3,4]  
[1,2,3,4]
ghci>drop 100 [1,2,3,4]
[]
ghci>minimum [8,4,2,1,5,6]  
1
ghci> maximum [1,9,2,3,4]  
9
ghci>sum [5,2,1,6,3,2,5,7]  
31
ghci>product [6,2,1,2]  
24
ghci>
ghci>product [1,2,5,6,7,9,2,0]  
0
ghci> 4 `elem` [3,4,5,6] 
True
ghci>10 `elem` [3,4,5,6] 
False
ghci>[1..20]  
[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
ghci>['a'..'z']  
"abcdefghijklmnopqrstuvwxyz"
ghci>['K'..'Z']  
"KLMNOPQRSTUVWXYZ"
ghci>[2,4..20]  
[2,4,6,8,10,12,14,16,18,20]
ghci>[3,6..20]
[3,6,9,12,15,18]
ghci>[0.1, 0.3 .. 1]  
[0.1,0.3,0.5,0.7,0.8999999999999999,1.0999999999999999]
ghci>take 10 (cycle [1,2,3])
[1,2,3,1,2,3,1,2,3,1]
ghci>take 12 (cycle "LOL ") 
"LOL LOL LOL "
ghci>take 10 (repeat 5)  
[5,5,5,5,5,5,5,5,5,5]
ghci>[x*2 | x <- [1..10]] 
[2,4,6,8,10,12,14,16,18,20]
ghci>[x*2 | x <- [1..10], x*2 >= 12]  
[12,14,16,18,20]
ghci>[ x | x <- [50..100], x `mod` 7 == 3] 
[52,59,66,73,80,87,94]
ghci>boomBangs [7..13] 
ghci>[ x*y | x <- [2,5,10], y <- [8,10,11]]  
[16,20,22,40,50,55,80,100,110]
ghci>[ x | x <- [10..20], x /= 13, x /= 15, x /= 19] 
[10,11,12,14,16,17,18,20]
ghci>[ x*y | x <- [2,5,10], y <- [8,10,11], x*y > 50]  
[55,80,100,110]
ghci>let nouns = ["hobo","frog","pope"] 
ghci>let adjectives = ["lazy","grouchy","scheming"]
ghci> [adjective ++ " " ++ noun | adjective <- adjectives, noun <- nouns]
["lazy hobo","lazy frog","lazy pope","grouchy hobo","grouchy frog","grouchy pope","scheming hobo","scheming frog","scheming pope"]
ghci>removeNonUppercase st = [ c | c <- st, c `elem` ['A'..'Z']]  
ghci>removeNonUppercase "Hahaha! Ahahaha!"  
"HA"
ghci>removeNonUppercase "IdontLIKEFROGS" 
"ILIKEFROGS"
ghci>let xxs = [[1,3,5,2,3,1,2,4,5],[1,2,3,4,5,6,7,8,9],[1,2,4,2,1,6,3,1,3,2,3,6]]
ghci>[ [ x | x <- xs, even x ] | xs <- xxs]  
[[2,2,4],[2,4,6,8],[2,4,2,6,2,6]]
ghci>zip [1,2,3,4,5] [5,5,5,5,5]  
[(1,5),(2,5),(3,5),(4,5),(5,5)]
ghci>zip [1 .. 5] ["one", "two", "three", "four", "five"]  
[(1,"one"),(2,"two"),(3,"three"),(4,"four"),(5,"five")]
ghci>zip [5,3,2,6,2,7,2,5,4,6,6] ["im","a","turtle"] 
[(5,"im"),(3,"a"),(2,"turtle")]
ghci>zip [1..] ["apple", "orange", "cherry", "mango"] 
[(1,"apple"),(2,"orange"),(3,"cherry"),(4,"mango")]
ghci>let triangles = [ (a,b,c) | c <- [1..10], b <- [1..10], a <- [1..10] ]   
ghci>let rightTriangles = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2] 
ghci>let rightTriangles' = [ (a,b,c) | c <- [1..10], b <- [1..c], a <- [1..b], a^2 + b^2 == c^2, a+b+c == 24]
ghci>rightTriangles' 
[(6,8,10)]
ghci>
